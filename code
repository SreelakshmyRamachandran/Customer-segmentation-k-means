#Importing the libraries

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt


# Loading the csv file from downloads folder in my system

cust_df = pd.read_csv("C:\\Users\\sreel\\Downloads\\Cust_Segmentation.csv")
cust_df.head()

#__Address__ in this dataset is a categorical variable. 
# k-means algorithm isn't directly applicable to categorical variables because the Euclidean distance function isn't meaningful for discrete variables.
#droppings feature and run clustering.

df = cust_df.drop('Address', axis=1)
df.head()

#Applying k-Means clustering

clusterNum = 3
k_means = KMeans(init = "k-means++", n_clusters = clusterNum, n_init = 12)
k_means.fit(X)
labels = k_means.labels_
print(labels)

#Assign the label into each row of the dataframe

df["Clus_km"] = labels
df.head(5)

#checking the centroid values by averaging the features in each cluster.

df.groupby('Clus_km').mean()
df.groupby('Clus_km').mean()

# Distribution of customers based on their age and income:



area = np.pi * (X[:, 1])**2  
plt.scatter(X[:, 0], X[:, 3], s=area, c=labels.astype(float), alpha=0.5)
plt.xlabel('Age', fontsize=18)
plt.ylabel('Income', fontsize=16)

plt.show()

fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')
ax.set_xlabel('Education')
ax.set_ylabel('Age')
ax.set_zlabel('Income')
ax.scatter(X[:, 1], X[:, 0], X[:, 3], c=labels.astype(float))

plt.show()
